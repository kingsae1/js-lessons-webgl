제작: 박시완 kingsae1

------------------------------------------------------------------
1. 자바스크립트에서의 행렬과 벡터
------------------------------------------------------------------

    Sylvester : 벡터와 매트릭스를 조작하기 위한 오픈소스 라이브러리. 매우 강력하지만 WebGL에 최적화 되지 않았습니다.
    WebGL-mjs : WebGL 사용에 최적화된 자바스크립트 벡터와 배트릭스 수학 라이브러리
    glMatrix : 고성능 WebGL앱들을 위한 자바스크립트 매트릭스와 벡터 라이브러리


------------------------------------------------------------------
2. 그리기 메소드
------------------------------------------------------------------
    WebGLBuffer에 바인딩된 버텍스를 대상으로 연산수행
    gl.drawArrays(), gl.drawElements()

    aVertexPosition 버택스 좌표정보
    aVertexColor 버텍스 컬러정보
    mat4 uMVMatrix 모델뷰 행령
    mat4 uPMatrix 투영 행렬

    gl_position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
    오브젝트좌표는 모델뷰 * 투영행렬 * 버텍스 => 클립좌표

    다음의 세 가지 컴퓨터 연산이 순차적으로 실행되면서 스크린 상의 픽셀로 변환
        1) 모델링, 뷰잉, 투영 연산 등과 같은 행렬 곱셈으로 표현된 변환
            1-1) 회전 변환, 평행이동 변환, 크기 변환, 반사, 직교투영, 원근 투영 등이 포함됨
        2) 장면은 사각형 윈도우에 렌더링되기 때문에 오브젝트 또는 오브젝트의 일부가 윈도우 밖에 놓여지는 경우 잘라내는 클리핑 수행
        3) 변환된 좌표와 스크린 픽셀을 서로 연결시켜주는 뷰포트 변환

------------------------------------------------------------------
3. 변환 순서의 중요성
------------------------------------------------------------------
    MN != NM 행렬의 특성

    오브젝트 좌표 ---> ModelView Matrix ---> Projection Matrix ----> Perspective Matrix ----> ViewPort transform -->
            Vertex                 눈좌표                    클립좌표                  정규화장치좌표                   윈도우좌표


    3.1 고정좌표계
        좌표계가 고정 여러 변환을 하더라도 움직이지 않음
        mat4.translate() mat4.rotate()

        "눈좌표에서 버텍스 좌표" = IRTv

        mat4.identity(modelViewMatrix);
        mat4.rotate(modelViewMatrix, Math.PI/4, [0,0,1], modelViewMatrix);
        mat4.translate(modelViewMatrix, [5,0,0], modelViewMatrix)

